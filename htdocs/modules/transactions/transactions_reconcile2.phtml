<?
include("../../../framework/theme.css");
include("transactions_reconcile2.css");
?>
<script language="JavaScript"
type="text/javascript">
var SORT_COLUMN_INDEX;
var RUNNING_TOTAL = <? echo $RUNNING_TOTAL ?>;
var row_target;
var DC_COUNT = 0;
var balance_amount = new Number(0.00);
var transaction_id = "NULL";
var xmlHttp;
var DEBIT_OR_CREDIT = '<? echo $account_info['accounttype_sign'] ?>';
var WORKING_ACCOUNT = <? echo $account_id ?>;

function add_dc_box(account, dc, amount)
{
    amount = parseFloat(amount);
    amount = amount.toFixed(2);

    newdiv_account = document.createElement('div');
    newdiv_account.setAttribute('class', 'dc_account');
    newdiv_account.innerHTML = account;
    newdiv_amount = document.createElement('div');
    newdiv_amount.setAttribute('class', 'dc_amount');
    newdiv_amount.innerHTML = amount;
    
    newdiv = document.createElement('div');
    newdiv.appendChild(newdiv_account);
    newdiv.appendChild(newdiv_amount);
    newdiv.setAttribute('class', 'DEBIT_CREDIT_BOX');
    if(dc == 'DEBIT')
    {
        var div_box = document.getElementById("debits_column");
    }
    if(dc == 'CREDIT')
    {
        var div_box = document.getElementById("credits_column");
    }
    div_box.appendChild(newdiv);
}

function draw_table() {
    window.location = '<? echo $_SERVER['PHP_SELF']."?".$query_string; ?>';
}

function ts_resortTable(lnk) {
    // get the span
    var span;
    for (var ci=0;ci<lnk.childNodes.length;ci++) {
        if (lnk.childNodes[ci].tagName && lnk.childNodes[ci].tagName.toLowerCase() == 'span') span = lnk.childNodes[ci];
    }
    var td = lnk.parentNode;
    var column = td.cellIndex;
    var trow = td.parentNode;
    var table = trow.parentNode;
    
    // Work out a type for the column
    if (transactions.length <= 1) return;
    sortfn = ts_sort_caseinsensitive;
    if (column == 0) sortfn = ts_sort_date;
    if (column == 1){ SORT_COLUMN_INDEX = 3;
    sortfn = ts_sort_numeric;
    }
    if (column == 2){  SORT_COLUMN_INDEX = 4;
    }
    if (column == 3) SORT_COLUMN_INDEX = 9;
    if (column == 4) SORT_COLUMN_INDEX = 10;
    if (column == 5){ SORT_COLUMN_INDEX = 11;}
    if (column == 6){ SORT_COLUMN_INDEX = 7;
    sortfn = ts_sort_numeric;
    }
    
    transactions.sort(sortfn);

    if (span.getAttribute("sortdir") == 'down') {
        ARROW = '&nbsp;&nbsp;&uarr;';
       transactions.reverse();
        span.setAttribute('sortdir','up');
    } else {
        ARROW = '&nbsp;&nbsp;&darr;';
        span.setAttribute('sortdir','down');
    }
    
    draw_table();
        
    // Delete any other arrows there may be showing
    var allspans = document.getElementsByTagName("span");
    for (var ci=0;ci<allspans.length;ci++) {
        if (allspans[ci].className == 'sortarrow') {
                allspans[ci].innerHTML = '&nbsp;&nbsp;&nbsp;';
        }
    }
    span.innerHTML = ARROW;
}

function ts_sort_date(a,b) {
    // y2k notes: two digit years less than 50 are treated as 20XX, greater than 50 are treated as 19XX
    dt1 = a[0]+a[1]+a[2];
    dt2 = b[0]+b[1]+b[2];
    if (dt1==dt2) return 0;
    if (dt1<dt2) return -1;
    return 1;
}

function ts_sort_currency(a,b) { 
    aa = ts_getInnerText(a.cells[SORT_COLUMN_INDEX]).replace(/[^0-9.]/g,'');
    bb = ts_getInnerText(b.cells[SORT_COLUMN_INDEX]).replace(/[^0-9.]/g,'');
    return parseFloat(aa) - parseFloat(bb);
}

function ts_sort_numeric(a,b) { 
    aa = parseFloat(a[SORT_COLUMN_INDEX]);
    if (isNaN(aa)) aa = 0;
    bb = parseFloat(b[SORT_COLUMN_INDEX]); 
    if (isNaN(bb)) bb = 0;
    return aa-bb;
}

function ts_sort_caseinsensitive(a,b) {
    aa = a[SORT_COLUMN_INDEX].toLowerCase();
    bb = b[SORT_COLUMN_INDEX].toLowerCase();
    if (aa==bb) return 0;
    if (aa<bb) return -1;
    return 1;
}

function ts_sort_default(a,b) {
    aa = a[SORT_COLUMN_INDEX];
    bb = b[SORT_COLUMN_INDEX];
    if (aa==bb) return 0;
    if (aa<bb) return -1;
    return 1;
}


function check_date(evt, datetype)
{ 
    createXMLHttpRequest();
    var objectID = (evt.target) ? evt.target.id : ((evt.srcElement) ? evt.srcElement.id :null);
    var date = document.getElementById(objectID);
    var url = "../tools/validate_date.php?type="+datetype+"&target="+objectID+"&num=" + escape(date.value);
    xmlHttp.open("GET", url, true);
    xmlHttp.onreadystatechange = callback;
    xmlHttp.send(null);
}
function callback()
{
    if (xmlHttp.readyState == 4) {
        if (xmlHttp.status == 200) {
            var xmlDoc = xmlHttp.responseXML;
            var objectID = xmlDoc.getElementsByTagName("target")[0].childNodes[0].nodeValue;
            var num = xmlDoc.getElementsByTagName("num")[0].childNodes[0].nodeValue;
            var currentElement = document.getElementById(objectID);
            currentElement.value = num;
        }
    }
}

function toggle_vis(divheader)
{
    var newtrans = document.getElementById("new_trans");
    newtrans.style.visibility = 'visible';
}
function toggle_vis_off(divheader)
{
    var newtrans = document.getElementById("new_trans");
    newtrans.style.visibility = 'hidden';
}

function createXMLHttpRequest() {
  try {
    xmlHttp = new XMLHttpRequest();
  } catch (trymicrosoft) {
    try {
      xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
    } catch (othermicrosoft) {
      try {
        xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
      } catch (failed) {
        xmlHttp = false;
      }
    }
  }

  if (!xmlHttp)
    alert("Error initializing XMLHttpRequest!");
}

function open_editbox(row)
{
    document.getElementById("transaction[date_year]").value = '';
    document.getElementById("transaction[date_month]").value = '';
    document.getElementById("transaction[date_day]").value = '';
    document.getElementById("transaction[transaction_checkno]").value = '';
    document.getElementById("transaction[transaction_comment]").value = '';
    document.getElementById("transaction[transaction_reconcile]").value = '';
    document.getElementById("transaction[reconciledate_year]").value = '';
    document.getElementById("transaction[reconciledate_month]").value = '';
    document.getElementById("transaction[reconciledate_day]").value = '';
    createXMLHttpRequest();
    trans_id = row.getAttribute('id');
    box_clear = document.getElementById("debits_column");
    if ( box_clear.hasChildNodes() )
    {
        while ( box_clear.childNodes.length >= 1 )
        {
            box_clear.removeChild( box_clear.firstChild );       
        } 
    }
    box_clear = document.getElementById("credits_column");
    if ( box_clear.hasChildNodes() )
    {
        while ( box_clear.childNodes.length >= 1 )
        {
            box_clear.removeChild( box_clear.firstChild );       
        } 
    }
    var queryString = "ACTION=get_transaction&transaction_id=" + trans_id;
    xmlHttp.open("POST", "transactions_edittransaction.php", true);
    xmlHttp.onreadystatechange = handleStateChange;
    xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
    xmlHttp.send(queryString);
}

function save_transaction() {
    createXMLHttpRequest();
    var dateYear =  document.getElementById("transaction[date_year]").value;
    var dateMonth = document.getElementById("transaction[date_month]").value;
    var dateDay =   document.getElementById("transaction[date_day]").value;
    var reconcile =    document.getElementById("transaction[transaction_reconcile]").value;
    var reconciledateYear =  document.getElementById("transaction[reconciledate_year]").value;
    var reconciledateMonth = document.getElementById("transaction[reconciledate_month]").value;
    var reconciledateDay =   document.getElementById("transaction[reconciledate_day]").value;
    
    var queryString = "ACTION=toggle_rec"
        + "&reconciledate_year=" + reconciledateYear + "&reconciledate_month=" + reconciledateMonth + "&reconciledate_day=" + reconciledateDay
        + "&transaction_id=" + transaction_id + "&reconcile=" + reconcile;
    xmlHttp.open("POST", "transactions_savetransaction.php", true);
    xmlHttp.onreadystatechange = handleStateChange;
    xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
    xmlHttp.send(queryString);
    
}

function delete_transaction(id) {
    createXMLHttpRequest();
    row_target = id;
    var transaction_id =    transactions[id][8];
    var queryString = "ACTION=delete_transaction&transaction_id=" + transaction_id;
    xmlHttp.open("POST", "transactions_savetransaction.php", true);
    xmlHttp.onreadystatechange = handleStateChange_delete;
    xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
    xmlHttp.send(queryString);
}

function view_details(id) 
{
    window.open('transactions_details.php?transaction_id='+transaction_id, 'Transaction Details');
}


function handleStateChange() {
     if (xmlHttp.readyState == 4) {
       if (xmlHttp.status == 200)
       {
            var xmlDoc = xmlHttp.responseXML;
            if(xmlDoc.getElementsByTagName("transaction").length > 0)
            {
                var transaction_status = xmlDoc.getElementsByTagName("transaction")[0].childNodes[0].nodeValue;
                if(transaction_status == "SAVED")
                { 
                     draw_table();
                }
            }    
            if(xmlDoc.getElementsByTagName("login").length > 0)
            {
                var login_status = xmlDoc.getElementsByTagName("login")[0].childNodes[0].nodeValue;
                if(login_status == "FAILED")
                {
                    
                    loginwindow = window.open('../interface/login_popup.html', 'Login', 'height=100,width=300');
                    //loginwindow.document.write(xmlHttp.responseText);
                }
            }
            if(xmlDoc.getElementsByTagName("retrieved").length > 0)
            {
                if(xmlDoc.getElementsByTagName("id")[0].childNodes.length > 0)
                {   
                    transaction_id =  xmlDoc.getElementsByTagName("id")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("checkno")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[transaction_checkno]").value =  xmlDoc.getElementsByTagName("checkno")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("comments")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[transaction_comment]").value =  xmlDoc.getElementsByTagName("comments")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("reconcile")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[transaction_reconcile]").value =  xmlDoc.getElementsByTagName("reconcile")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("date_year")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[date_year]").value =  xmlDoc.getElementsByTagName("date_year")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("date_month")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[date_month]").value =  xmlDoc.getElementsByTagName("date_month")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("date_day")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[date_day]").value =  xmlDoc.getElementsByTagName("date_day")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("r_date_year")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[reconciledate_year]").value =  xmlDoc.getElementsByTagName("r_date_year")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("r_date_year")[0].childNodes.length == 0)
                {   
                    document.getElementById("transaction[reconciledate_year]").value =  xmlDoc.getElementsByTagName("date_year")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("r_date_month")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[reconciledate_month]").value =  xmlDoc.getElementsByTagName("r_date_month")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("r_date_month")[0].childNodes.length == 0)
                {   
                    document.getElementById("transaction[reconciledate_month]").value =  xmlDoc.getElementsByTagName("date_month")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("r_date_day")[0].childNodes.length > 0)
                {   
                    document.getElementById("transaction[reconciledate_day]").value =  xmlDoc.getElementsByTagName("r_date_day")[0].childNodes[0].nodeValue;
                }
                if(xmlDoc.getElementsByTagName("r_date_day")[0].childNodes.length == 0)
                {   
                    document.getElementById("transaction[reconciledate_day]").value =  xmlDoc.getElementsByTagName("date_day")[0].childNodes[0].nodeValue;
                }
                debit_credit_length = xmlDoc.getElementsByTagName("debit_credit").length;
                debit_credit = xmlDoc.getElementsByTagName("debit_credit");
                for(dc_iterate=0; dc_iterate < debit_credit_length; dc_iterate++)
                {
                   add_dc_box(xmlDoc.getElementsByTagName("debit_credit")[dc_iterate].childNodes[7].firstChild.nodeValue, xmlDoc.getElementsByTagName("debit_credit")[dc_iterate].childNodes[5].firstChild.nodeValue, xmlDoc.getElementsByTagName("debit_credit")[dc_iterate].childNodes[3].firstChild.nodeValue);
                }
                toggle_vis(document.getElementById("toggle_button"));
                javascript:scroll(0,0);

            }
            if(xmlDoc.getElementsByTagName("show").length > 0)
            {
                var message = xmlDoc.getElementsByTagName("message")[0].childNodes[0].nodeValue;
                popUp = document.getElementById("warning_box");
                popUp.style.visibility="visible";
                message_div = document.getElementById("warning_box_message");
                message_div.innerHTML = message;
            }
               
       }
       else if (xmlHttp.status == 404)
         alert("Request URL does not exist");
       else
         alert("Error: status code is " + xmlHttp.status);
      }
}

    function handleStateChange_delete() {
        if (xmlHttp.readyState == 4) {
        if (xmlHttp.status == 200)
        {
                var xmlDoc = xmlHttp.responseXML;
                if(xmlDoc.getElementsByTagName("transaction").length > 0)
                {
                    var transaction_status = xmlDoc.getElementsByTagName("transaction")[0].childNodes[0].nodeValue;
                    if(transaction_status == "SAVED")
                    { 
                        draw_table();
                    }
                }    
                if(xmlDoc.getElementsByTagName("login").length > 0)
                {
                    var login_status = xmlDoc.getElementsByTagName("login")[0].childNodes[0].nodeValue;
                    if(login_status == "FAILED")
                    {
                        loginwindow = window.open('../interface/login_popup.html', 'Login', 'height=100,width=300');
                        //loginwindow.document.write(xmlHttp.responseText);
                    }
                }
                if(xmlDoc.getElementsByTagName("show").length > 0)
                {
                    var message = xmlDoc.getElementsByTagName("message")[0].childNodes[0].nodeValue;
                    popUp = document.getElementById("warning_box");
                    popUp.style.visibility="visible";
                    message_div = document.getElementById("warning_box_message");
                    message_div.innerHTML = message;
                }
                
        }
        else if (xmlHttp.status == 404)
            alert("Request URL does not exist");
        else
            alert("Error: status code is " + xmlHttp.status);
        }
    }

    function hidetip2(){
        var popUp;
        popUp = document.getElementById("warning_box");
        popUp.style.visibility="hidden";
    }

    function check_date(evt, datetype)
    { 
        createXMLHttpRequest();
        var objectID = (evt.target) ? evt.target.id : ((evt.srcElement) ? evt.srcElement.id :null);
        var date = document.getElementById(objectID);
        var url = "../tools/validate_date.php?type="+datetype+"&target="+objectID+"&num=" + escape(date.value);
        xmlHttp.open("GET", url, true);
        xmlHttp.onreadystatechange = callback;
        xmlHttp.send(null);
    }
    function callback()
    {
        if (xmlHttp.readyState == 4) {
            if (xmlHttp.status == 200) {
                var xmlDoc = xmlHttp.responseXML;
                var objectID = xmlDoc.getElementsByTagName("target")[0].childNodes[0].nodeValue;
                var num = xmlDoc.getElementsByTagName("num")[0].childNodes[0].nodeValue;
                var currentElement = document.getElementById(objectID);
                currentElement.value = num;
            }
        }
    }   
    function createXMLHttpRequest() {
    try {
        xmlHttp = new XMLHttpRequest();
    } catch (trymicrosoft) {
        try {
        xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
        } catch (othermicrosoft) {
        try {
            xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
        } catch (failed) {
            xmlHttp = false;
        }
        }
    }
    
    if (!xmlHttp)
        alert("Error initializing XMLHttpRequest!");
    }
    



</script>
    <div class="warning_box" id="warning_box" style="visibility:hidden;">
        <div id='subad'>
            <div style='width:max;text-align:right;clear:both;'><a href='javascript:hidetip2();' style='color:red;font-size:10pt;'><b>CLOSE</b>[X]</a>
            </div>
            <div id="warning_box_message">
                <? echo $WARNING['message']?>
            </div>
        </div>
    </div>
<div class="portlet">
    <div class="divheader">Reconcile <? echo $all_accounts[$account_id]?></div>
    <div class="row" id="rowhead" name="rowhead">
            <? for($i = 0; $i <= $page_count; $i++)
            {
                ?>
                <a href="<? echo $BASE_DIR ?>/transactions/transactions_reconcile2.php?account_id=<? echo $account_id ?>&amp;date_year=<? echo $date_year?>&amp;date_month=<? echo $date_month?>&amp;date_day=<? echo $date_day?>&amp;page=<? echo $i?>"><? echo $i?></a>
                <?
            }
            ?>    
        <A href="transactions_reconcile2.php?account_id=<? echo $account_id ?>&VIEWALL=Y">VIEW ALL</A>
    </div>    

<div class="new_trans" id="new_trans">
    <table>
        <tr> 
            <th>Date</th>
            <th>Check Num</th>
            <th>Comment</th>
            <th>Rec?</th>
            <th>Reconcile Date</th>
        </tr>
       <tr>
            <td class="nb">
                <?
                Framework::date_selectors('', '', '', "transaction[", "]");
                ?>
            </td>
            <td class="nb">
                <input type="TEXT"  name="transaction[transaction_checkno]" id="transaction[transaction_checkno]"  value="" size="8">
            </td>
            <td class="nb">
                <input type="TEXT"  id="transaction[transaction_comment]" name="transaction[transaction_comment]"  value="" size="16">
            </td>
            <td class="nb">
                <input type="TEXT"  id="transaction[transaction_reconcile]" name="transaction[transaction_reconcile]"  value="" size="1">
            </td>
            <td class="nb">
                <?
                Framework::date_selectors('', '', '', "transaction[reconcile", "]");
                ?>
            </td>
            <td class="nb">
                <input type="BUTTON" class="btn" name="ACTION"  value="Record" onclick="save_transaction()">
            </td>
        </tr>
    </table>
    <div >
        <div class="DEBIT_LABEL">DEBITS</div>
        <div class="CREDIT_LABEL">CREDITS</div>
    </div>
    <div id="debits_credits">
        <div id="debits_column" class="DEBIT_LABEL"></div>
        <div id="credits_column" class="CREDIT_LABEL"></div>
    </div>
</div>

<TABLE class="fixed" id="unique_id" cellspacing="0" cellpadding="0" >
    <col class="date"></col>
    <col class="checknum" ></col>
    <col class="comment"></col>
    <col ></col>
    <col class="reconcile" ></col>
    <col class="date"></col>
    <col class="amount" ></col>
    <col class="amount2" ></col>
        <tr> 
            <td ><a href="#" onclick="ts_resortTable(this);return false;">Date:<span class="sortarrow">&nbsp;&nbsp;&uarr;</span></a></td>
            <td><a href="#" onclick="ts_resortTable(this);return false;">Check Num:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
            <td ><a href="#" onclick="ts_resortTable(this);return false;">Comment:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
            <td ><a href="#" onclick="ts_resortTable(this);return false;">Account:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
            <td ><a href="#" onclick="ts_resortTable(this);return false;">R:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
            <td ><a href="#" onclick="ts_resortTable(this);return false;">R Date:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
            <td><a href="#" onclick="ts_resortTable(this);return false;">Debit:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
            <td><a href="#" onclick="ts_resortTable(this);return false;">Credit:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
            <td><a href="#" onclick="ts_resortTable(this);return false;">Running <BR /> Balance:<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></td>
        </tr>
        <tr> 
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td align="right" class="<? if ($RUNNING_TOTAL < 0){
                echo "neg";
            }else {echo "black";} 
            ?>"><? echo $RUNNING_TOTAL ?></td>
        </tr>
<?
$class = "green";
foreach($transactions as $row)
{
    ?>
        <tr class="<? echo $class?>"  id="<? echo  $row['transaction_id'] ?>" onclick="open_editbox(this)">
            <td>
                <? echo $row['transaction_date'] ?>
            </td>
            <td align="right">
                <? echo $row['transaction_checkno']; ?>
            </td>
            <td>
                <? echo $row['transaction_comment']; ?>
            </td>
            <td>
                <?  if(strpos($row['split'], ','))
                    {
                        echo "SPLIT";
                    }
                    else
                    {
                        echo $all_accounts[$row['split']]; 
                    }
                    ?>
            </td>
            <td align="right">
                <? echo $row['transaction_reconcile']; ?>
            </td>
            <td align="right">
                <? echo $row['transaction_reconcile_date']; ?>
            </td>
            <td align="right">
            <?  if($row['transaction_dc'] == 'DEBIT')
            {
                  echo $row['transaction_dc_amount']; 
            }
            ?>
            </td>
            <td align="right">
            <?  if($row['transaction_dc'] == 'CREDIT')
            {
                  echo $row['transaction_dc_amount']; 
            }
            ?>
            </td>
            <?
            if($row['transaction_reconcile'] == 'R')
            {
                if($row['transaction_dc']== 'DEBIT')
                {
                    if($account_info['accounttype_sign'] == 'DEBIT')
                    {
                        $RUNNING_TOTAL = bcadd($RUNNING_TOTAL, $row['transaction_dc_amount'], 2);
    
                    }
                    else
                    {
                        $RUNNING_TOTAL = bcsub($RUNNING_TOTAL, $row['transaction_dc_amount'], 2);
                    }
                }
                if($row['transaction_dc']== 'CREDIT')
                {
                    if($account_info['accounttype_sign'] == 'DEBIT')
                    {
                        $RUNNING_TOTAL = bcsub($RUNNING_TOTAL, $row['transaction_dc_amount'], 2);
    
                    }
                    else
                    {
                        $RUNNING_TOTAL = bcadd($RUNNING_TOTAL, $row['transaction_dc_amount'], 2);
                    }
                }
            }
            ?>
            <td align="right" class="<?


            if ($RUNNING_TOTAL < 0)
            {
                echo "neg";
            }
            else{
                echo "black";
            } 
            ?>"><? echo $RUNNING_TOTAL; ?>
            </td>
        </tr>    
    <?
    switch ($class)
    {
        case "green":
            $class = "yellow";
            break;
        
        case "yellow":
            $class = "green";
            break;
    }
    $i++;
    
}
?>
        <tr>    
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb"></td>
            <td class="nb" align=right>
                BALANCE:
            </td>
            <td id="print_total" align="right" class="<? if ($TOTAL < 0){
                    echo "negnb";
                }else {echo "blacknb";} 
                ?> 
            "><? echo $TOTAL ?>
            </td>
        </tr>

</TABLE>
